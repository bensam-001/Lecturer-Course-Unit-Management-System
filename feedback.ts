Bug Fixes:

Update Function Signatures: In several functions, the parameter types for the Result return type are incorrectly defined. For instance, in the getLecturersByDepartment function, it should return Result<Vec<Lecturer>, string>, but it's defined as Result<Vec<Lecturer>, Lecturer>. Similar corrections need to be made in other functions.
Error Handling in Update Functions: In the updateLecturer, updateLecturerDepartment, updateLecturerEmail, updateLecturerName, updateCourseUnit, updateCourseUnitLecturer, and updateCourseUnitName functions, there's a possibility of updating a record even if the record is not found (when None is returned from match). This should be handled differently, perhaps by returning an error message in such cases.
Input Validation: While input validation is present in addLecturer, updateLecturer, updateCourseUnit, and similar functions, it could be improved by validating the payload structure more thoroughly. For instance, ensuring that string fields are not empty, numeric fields are valid numbers, etc.
Security Fixes:

UUID Generation: The current implementation of the UUID generation using crypto.getRandomValues is not cryptographically secure. It's better to use a library like uuid directly rather than relying on pseudo-random values generated by crypto.getRandomValues.
Code Improvements:

Consistency in Error Messages: Ensure consistency in error message formats across functions. For example, some error messages start with a capital letter and end with a period, while others don't. Consistency improves readability and maintainability.
Code DRYness: There is some repetition in error handling and update logic across different update functions. Consider refactoring common patterns into helper functions to reduce redundancy and improve maintainability.
Optimize Input Validation: Instead of manually checking each field in the payload, consider using a validation library or defining a schema to validate the entire payload structure at once. This would make the validation code more concise and easier to maintain.
